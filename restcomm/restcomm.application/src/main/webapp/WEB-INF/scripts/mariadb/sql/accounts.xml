<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--
  @author thomas.quintana@telestax.com (Thomas Quintana)
-->
<mapper namespace="org.mobicents.servlet.sip.restcomm.dao.AccountsDao">
  <insert id="addAccount" parameterType="map">
    INSERT INTO "restcomm_accounts" ("sid", "date_created", "date_updated", "email_address", "friendly_name", "parent_sid", "type", "status",  "role", "uri")
    VALUES(#{sid}, #{date_created}, #{date_updated}, #{email_address}, #{friendly_name}, #{parent_sid}, #{type}, #{status}, #{role}, #{uri});
  </insert>
  <select id="getAccount" parameterType="string" resultType="map">
   SELECT * FROM "restcomm_accounts" WHERE "sid"=#{id};
  </select>

  <select id="getAccountByFriendlyName" parameterType="string" resultType="hashmap">
    SELECT * FROM "restcomm_accounts" WHERE "friendly_name"=#{name};
  </select>
  
    <select id="getAccountByEmail" parameterType="string" resultType="hashmap">
    SELECT * FROM "restcomm_accounts" WHERE "email_address"=#{name};
  </select>
  
  <select id="getChildAccounts" parameterType="string" resultType="hashmap">
    SELECT * FROM "restcomm_accounts" WHERE "parent_sid"=#{parent_sid};
  </select>
  
  <delete id="removeAccount" parameterType="string">
    DELETE FROM "restcomm_accounts" WHERE "sid"=#{sid};
  </delete>

  <update id="updateAccount" parameterType="map">
    UPDATE "restcomm_accounts" SET "date_updated"=#{date_updated}, "email_address"=#{email_address}, "friendly_name"=#{friendly_name},
    "type"=#{type}, "status"=#{status}, "role"=#{role} WHERE "sid"=#{sid};
  </update>

  <select id="getSubAccountSids" parameterType="java.util.List" resultType="string">
    SELECT "sid" FROM "restcomm_accounts" WHERE "parent_sid" IN
    <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
      #{item}
    </foreach>
  </select>

 <insert id="addAuthToken" parameterType="map">
    INSERT INTO "restcomm_accounts_auth_tokens" ("account_sid", "auth_token" , "description")
    VALUES(#{account_sid},#{auth_token}, 'active');
  </insert>

  <select id="getAccountTokens" parameterType="string" resultType="map">
    SELECT * FROM "restcomm_accounts_auth_tokens" where "account_sid"=#{account_sid};
  </select>
 
  <delete id="deleteAuthToken" parameterType="map">
    DELETE FROM "restcomm_accounts_auth_tokens"
    WHERE "account_sid"=#{account_sid} AND "auth_token"=#{auth_token};
  </delete>
</mapper>
